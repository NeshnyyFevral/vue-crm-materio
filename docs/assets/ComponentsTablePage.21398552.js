import{V as o}from"./VPreviewComponentCard.5f5e5bba.js";import{V as i}from"./VPreviewComponentPage.bf2f9ec1.js";import{a as r,V as l}from"./VTableColumn.5a0ddd80.js";import{_ as m,d as b,b as u,c,k as a,l as n,n as d}from"./index.2eb262cb.js";import"./VTitle.de9ea092.js";import"./chevron-down.b9deb57e.js";import"./VFlex.41a9361c.js";const p="_root_1rqpz_1";var f={root:p};const _=b({__name:"ComponentsTablePage",setup(w){const t=[{name:"Frozen yoghurt",calories:159,fat:6,carbs:24,protein:4},{name:"Ice cream sandwich",calories:237,fat:9,carbs:37,protein:4.3},{name:"Eclair",calories:262,fat:16,carbs:24,protein:6},{name:"Cupcake",calories:305,fat:3.7,carbs:67,protein:4.3},{name:"Gingerbread",calories:356,fat:16,carbs:49,protein:3.9}];return(s,B)=>(u(),c("div",{class:d(s.$style.root)},[a(i,null,{default:n(()=>[a(o,{desc:`Use <VTable> and <VTableColumn> to build a table,\r
         add \xABname\xBB and \xABlabel\xBB props to specify a particular field in an array of objects.`,title:"Table default"},{default:n(()=>[a(r,{data:t},{default:n(({row:e})=>[a(l,{name:"name",label:"DESSERT (100G SERVING)",row:e},null,8,["row"]),a(l,{name:"calories",label:"CALORIES",row:e},null,8,["row"]),a(l,{name:"fat",label:"FAT",row:e},null,8,["row"]),a(l,{name:"carbs",label:"CARBS",row:e},null,8,["row"]),a(l,{name:"protein",label:"PROTEIN",row:e},null,8,["row"])]),_:1})]),_:1}),a(o,{desc:`use boolean prop \xABwithKey\xBB to give the first column a sort of guiding position,\r
         which is more often a generic name for the entire row`,title:"Table with guideway key"},{default:n(()=>[a(r,{data:t,"with-key":""},{default:n(({row:e})=>[a(l,{name:"name",label:"DESSERT (100G SERVING)",row:e},null,8,["row"]),a(l,{name:"calories",label:"CALORIES",row:e},null,8,["row"]),a(l,{name:"fat",label:"FAT",row:e},null,8,["row"]),a(l,{name:"carbs",label:"CARBS",row:e},null,8,["row"]),a(l,{name:"protein",label:"PROTEIN",row:e},null,8,["row"])]),_:1})]),_:1})]),_:1}),a(o,{desc:"use boolean prop \xABmaxWidth\xBB to set the table to the maximum allowable size.",title:"Max width table"},{default:n(()=>[a(r,{data:t,"with-key":"","max-width":""},{default:n(({row:e})=>[a(l,{name:"name",label:"DESSERT (100G SERVING)",row:e},null,8,["row"]),a(l,{name:"calories",label:"CALORIES",row:e},null,8,["row"]),a(l,{name:"fat",label:"FAT",row:e},null,8,["row"]),a(l,{name:"carbs",label:"CARBS",row:e},null,8,["row"]),a(l,{name:"protein",label:"PROTEIN",row:e},null,8,["row"])]),_:1})]),_:1}),a(o,{desc:"use boolean prop \xABsmallPaddings\xBB to reduce paddings.",title:"Table with small paddings"},{default:n(()=>[a(r,{data:t,"with-key":"","max-width":"","small-paddings":""},{default:n(({row:e})=>[a(l,{name:"name",label:"DESSERT (100G SERVING)",row:e},null,8,["row"]),a(l,{name:"calories",label:"CALORIES",row:e},null,8,["row"]),a(l,{name:"fat",label:"FAT",row:e},null,8,["row"]),a(l,{name:"carbs",label:"CARBS",row:e},null,8,["row"]),a(l,{name:"protein",label:"PROTEIN",row:e},null,8,["row"])]),_:1})]),_:1})],2))}}),E={$style:f};var g=m(_,[["__cssModules",E]]);export{g as default};
